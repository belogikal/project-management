require 'rails_helper'

RSpec.describe Team, type: :model do
  describe 'associations' do
    it 'has many members' do
      association = described_class.reflect_on_association(:members)
      expect(association.macro).to eq :has_many
    end
  end

  describe 'validations' do
    let!(:team) { Fabricate(:team) }

    it 'is valid with default fabricator' do
      expect(team).to be_valid
    end

    it 'is invalid if name is not present' do
      team.name = nil
      expect(team).not_to be_valid
      expect(team.errors.full_messages).to eq(["Name can't be blank"])
    end

    it 'is invalid if name and slug is not unique' do
      # slug is auto generated by parameterizing name
      invalid_team = described_class.new(name: team.name)

      expect(invalid_team).to be_invalid
      expect(invalid_team.errors.full_messages).to eq(['Name has already been taken', 'Slug has already been taken'])
    end
  end

  describe 'callbacks' do
    context '#generate_slug' do
      let!(:team) { Fabricate(:team, name: 'Test Name 1') }

      it 'generates slug for the team' do
        expect(team.slug).to eq('test-name-1')
      end
    end
  end
end
